/** @file     Rte_Wiper_Controller.h
  * 
  * @brief    Application header file
  * 
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  * 
  * @note     Generated by ETAS GmbH  RTA-RTE v5.8.4  (R4.0 backend version: v7.8.7 (Build 46772))
  */

#ifndef RTE_WIPER_CONTROLLER_H
#define RTE_WIPER_CONTROLLER_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_Wiper_Controller_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_WiperController)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_Wiper_Controller {
   uint8 _dummy;
};
typedef struct Rte_CDS_Wiper_Controller Rte_CDS_Wiper_Controller;

/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_Wiper_Controller, RTE_CONST) Rte_Inst_Wiper_Controller;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_Wiper_Controller, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_START_SEC_CODE
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_Wiper_Controller_Pport_WiperController_to_WiperMotor_wipermotor_Speed_Value(VAR(uint8, AUTOMATIC) data);
#define RTE_STOP_SEC_CODE
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(Rte_SelfType_Rain_Sensor, RTE_CONST) Rte_Self_CPT_Rain_Sensor;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
#define Rain_Sensor_START_SEC_CODE
#include "Rain_Sensor_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, Rain_Sensor_CODE) RE_RainSensor(CONSTP2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) rain_sensor_value);

#define Rain_Sensor_STOP_SEC_CODE
#include "Rain_Sensor_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_8BIT
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) switch_sensor_value;
#define RTE_STOP_SEC_VAR_8BIT
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_WiperController)
/* Inline function call optimization; Rte_Call_Rport_RainSensor_to_WiperController_CS_Oper_RainSensor_to_WiperController to RE_RainSensor */
#define Rte_Call_Rport_RainSensor_to_WiperController_CS_Oper_RainSensor_to_WiperController( rain_sensor_value ) ( RE_RainSensor(rain_sensor_value), ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_WiperController)
/* Inline read optimization; Rte_Read_Rport_SitchSensor_to_WiperController_switch_sensor_value to direct access */
#define Rte_Read_Rport_SitchSensor_to_WiperController_switch_sensor_value( data )  ( ((*(data)) = switch_sensor_value),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_WiperController)
#define Rte_Write_Pport_WiperController_to_WiperMotor_wipermotor_Speed_Value( data ) (Rte_Write_Wiper_Controller_Pport_WiperController_to_WiperMotor_wipermotor_Speed_Value(data))
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define Wiper_Controller_START_SEC_CODE
#include "Wiper_Controller_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, Wiper_Controller_CODE) RE_WiperController(void);
#define Wiper_Controller_STOP_SEC_CODE
#include "Wiper_Controller_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* RTE_WIPER_CONTROLLER_H */
