/** @file     Rte_Switch_Sensor.h
  * 
  * @brief    Application header file
  * 
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  * 
  * @note     Generated by ETAS GmbH  RTA-RTE v5.8.4  (R4.0 backend version: v7.8.7 (Build 46772))
  */

#ifndef RTE_SWITCH_SENSOR_H
#define RTE_SWITCH_SENSOR_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_Switch_Sensor_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_SwitchSensor)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_Switch_Sensor {
   uint8 _dummy;
};
typedef struct Rte_CDS_Switch_Sensor Rte_CDS_Switch_Sensor;

/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_Switch_Sensor, RTE_CONST) Rte_Inst_Switch_Sensor;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_Switch_Sensor, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(Rte_SelfType_ECU_ABS, RTE_CONST) Rte_Self_CPT_ECU_ABS;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
#define ECU_ABS_START_SEC_CODE
#include "ECU_ABS_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, ECU_ABS_CODE) RE_ECU_to_SwitchSensor(CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) switch_sensor_value);

#define ECU_ABS_STOP_SEC_CODE
#include "ECU_ABS_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_8BIT
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) switch_sensor_value;
#define RTE_STOP_SEC_VAR_8BIT
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SwitchSensor)
/* Inline function call optimization; Rte_Call_Rport_ECU_to_SwitchSensor_CS_Oper_ECU_to_SwitchSensor to RE_ECU_to_SwitchSensor */
#define Rte_Call_Rport_ECU_to_SwitchSensor_CS_Oper_ECU_to_SwitchSensor( switch_sensor_value ) ( RE_ECU_to_SwitchSensor(switch_sensor_value), ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SwitchSensor)
/* Inline Write optimization; Rte_Write_Pport_SwitchSensor_to_WiperMode_switch_sensor_value to direct write */
#define Rte_Write_Pport_SwitchSensor_to_WiperMode_switch_sensor_value( data ) ( RTE_ATOMIC8(switch_sensor_value = data), RTE_E_OK )
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define Switch_Sensor_START_SEC_CODE
#include "Switch_Sensor_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, Switch_Sensor_CODE) RE_SwitchSensor(void);
#define Switch_Sensor_STOP_SEC_CODE
#include "Switch_Sensor_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* RTE_SWITCH_SENSOR_H */
